<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec11-model-moving-worlds" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Modeling Data and Moving Between Worlds</title>
  <introduction>
  
  <p>
  In this section we will look at linear algebra as a way to encode information 
  and operate on it allowing us to move between different sets of information.  To this end, we 
  will define how <em>matrices</em> and <em>vectors</em> are operated on with binary operations like addition and 
  multiplication.  While multiplication of matrices may seem weird at first, you will see that it is defined 
  as it is for convenience in manipulating data and transforming different types of values into 
  other computed values based on them.  We begin by considering a case where we want to move between 
  a pricing scheme and the revenue it generates for three different companies with three different 
  sets of orders of our products.
  </p>
  <p>
    To accomplish this, we will use constructs created to deal with objects that contain multiple entries.  
    In the scenario we are using where companies place orders for products, we want to encode the numerical 
    values for the orders organizing them according to the product and company placing the order.  Here 
    just want to reduce the information to an array of values and so we define a <em>matrix</em> as an 
    array of values (or objects) consisting of rows and columns.  We typically contain these values with 
    brackets or parentheses like:
    <me>
       \begin{bmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{bmatrix} 
\text{or}
  \begin{pmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{pmatrix}
</me>
    In the matrices above, the columns could represent the numbers of each of four products being ordered 
    and the rows could represent the three different companies placing the orders (see the table of orders 
    for this situation given in Table 1.1.1).
  </p>
  <p> 
    We also define a <em>vector</em> as matrix with a single column such as 
    <m>
    \mathbf{v}=\begin{bmatrix}
    2\\0\\-3
    \end{bmatrix}
    </m> 
    or 
    <m>
    \mathbf{w}=\begin{bmatrix}
    1\\7\\-1\\4
    \end{bmatrix}
    </m>. 
    Note that we are using boldface to denote the names of the vectors for convenience to distinguish them from 
    numerical objects that we call <em>scalars</em>.  In a text like this, using boldface makes sense 
    in print, but typically, in written work, we use a harpoon over the name since boldface is not practical 
    with a pen.  In this case, we would write the names as <m>\overset{\rightharpoonup}{v}</m> or 
    <m>\overset{\rightharpoonup}{w}</m> respectively.
  </p>
  <p>
    You may have encountered vectors before in geometry or physics.  We will go into greater detail later with 
    respect to the geometric interpretation, but for now, the behavior remains the same in that operations 
    still work as they do in geometry and physics.  Essentially, vectors consist of <em>components</em> 
    so that when the vectors are added, we simply add the components.
    </p>
    <p>
    <definition xml:id="def-vector-add">
      <statement>
          <p>
            If <m>\mathbf{v}</m> and <m>\mathbf{u}</m> are vectors, we define vector addition as adding the 
            vectors component by component.  Note that the vectors must be of the same dimension.
          <me>
            \mathbf{v}+\mathbf{u} = 
             \begin{bmatrix}
            v_1\\
             v_2\\
             \vdots\\
             v_n
             \end{bmatrix} +
             \begin{bmatrix}
             u_1\\
              u_2\\
             \vdots\\
             u_n
             \end{bmatrix} =
             \begin{bmatrix}
             v_1+u_1\\
             v_2+u_2\\
             \vdots\\
             v_n+u_n
             \end{bmatrix}
            </me>
        </p>
      </statement>
    </definition>
    </p>
    <p>
    For example, suppose we have the two vectors in <m>\mathbb{R}^3</m>,  
    <m>
    \begin{bmatrix}
    1\\-5\\2
    \end{bmatrix}
    \text{and}
    \begin{bmatrix}
    2\\1\\7
    \end{bmatrix}
    </m>.  Adding these would result in 
    <m>
       \begin{bmatrix}
    1\\-5\\2
    \end{bmatrix} +
    \begin{bmatrix}
    2\\1\\7
    \end{bmatrix} =
    \begin{bmatrix}
    3\\-4\\9
    \end{bmatrix}
    </m>.
  </p>
  <p>
    The other basic operation we can do with vectors is to <em>scale</em> them (geometrically make them longer 
    or shorter or in the case of negative values, make them go in the opposite direction).  For this reason, 
    when we multiply the vector by a numerical value, we call that value a <em>scalar</em>.  For example, 
    <me>
    2\cdot \begin{bmatrix}
    -1\\3\\5
    \end{bmatrix} =
    \begin{bmatrix}
    -2\\6\\10
    \end{bmatrix}
    </me>
    In essence, we scaled the vector by a factor of 2.
  </p>
  <p>
    <definition xml:id="def-scalar-mult">
      <statement>
        <p>
          In general, we can define scalar multiplication of a vector as 
        <men>
        c\mathbf{v} =  c\cdot \begin{bmatrix}
        v_1\\
        v_2\\
        \vdots\\
        v_n
       \end{bmatrix} =
       \begin{bmatrix}
        cv_1\\
        cv_2\\
        \vdots\\
        cv_n
        \end{bmatrix}
        </men>
        where <m>c\in \mathbb{R}</m>.
        </p>
      </statement>
    </definition>
    
  </p>
  <p>
Combining scalar multiplication with vector addition, we get
<men>
      c_1\cdot \mathbf{v}+c_2\cdot \mathbf{u} = 
      c_1\cdot \begin{bmatrix}
      v_1\\
      v_2\\
      \vdots\\
      v_n
      \end{bmatrix} +
      c_2\cdot \begin{bmatrix}
      u_1\\
      u_2\\
      \vdots\\
      u_n
      \end{bmatrix} =
      \begin{bmatrix}
      c_1 v_1+c_2 u_1\\
      c_1 v_2+c_2 u_2\\
      \vdots\\
      c_1 v_n+c_2 u_n
      \end{bmatrix}
    </men>
    We can use these <em>linear combinations</em> applying them to our previous scenario for moving 
    between price of materials and the revenue they generate.
  </p>

</introduction>

<subsection xml:id="sec-Linear-Comb-Data">
  <title>Linear Combinations and Dealing with Data</title>


    <p>
      Continuing our scenario from the introduction.  Suppose that a supplier provides four different products with 
      prices, <m> p_1, p_2, p_3, p_4 </m>, to three companies.  One thing we may want to do is to play with pricing
        schemes and look at the generated revenue we would get from each of the three companies.  
        Suppose we have orders from the three companies for each of our four products as given in the table below.
    </p>
       <p>
        <table xml:id="product-orders">
  <title>Product Orders</title>
  <tabular halign="center">
    <row header="yes" bottom="minor">
      <cell>Clients</cell>
      <cell>Product 1</cell>
      <cell>Product 2</cell>
      <cell>Product 3</cell>
      <cell>Product 4</cell>
    </row>
    <row>
      <cell>Company 1</cell>
      <cell>14</cell>
      <cell>9</cell>
      <cell>34</cell>
      <cell>41</cell>
    </row>
    <row>
      <cell>Company 2</cell>
      <cell>32</cell>
      <cell>7</cell>
      <cell>12</cell>
      <cell>52</cell>
    </row>
    <row>
      <cell>Company 3</cell>
      <cell>21</cell>
      <cell>8</cell>
      <cell>5</cell>
      <cell>23</cell>
    </row>
  </tabular>
</table>
       </p>
  <p>
    <activity>
      <title >Prices, Vectors, and Revenue</title >
      <introduction>
      <p>
        Consider the scenario given above for the orders by three companies for four different products.
      </p>
      </introduction>

      <task>
      <statement>
      <p>
        Thinking of the four <term>Products</term> from <xref ref="product-orders"/> as each being a vector where the entries 
        of the vector store the orders made for each of the three companies, express this information as a 
        set of four vectors in <m>\mathbb{R}^3</m>.
      </p>
      </statement>
      <answer>
      <p>
        Since there are four <term>Products</term>, we can express the orders from the three companies for 
        each <term>Product</term> as an ordered triple (or vector) containing three entries (one for each company) 
        for that product.  This would give us a set of four vectors:
        <me>
        \left\{ \begin{bmatrix}
        14\\32\\21
        \end{bmatrix}
        ,\begin{bmatrix}
        9\\7\\8
        \end{bmatrix}
        ,\begin{bmatrix}
        34\\12\\5
        \end{bmatrix}
        ,\begin{bmatrix}
        41\\52\\23
        \end{bmatrix}
        \right\}
        </me>
      </p>
      </answer>
      </task>

      <task>
      <statement>
      <p>
        If Product 1 is priced at $12, Product 2 is priced at $9, Product 3 is priced at $15, 
        and Product 4 is priced at $7, using these prices for each of the four Products in the table as scalars, 
        write a linear combination of the vectors from your set from part (a) that when added will give a 
        vector in <m>\mathbb{R}^3</m> that represents the revenue generated from each company.  How much 
        did you collect from each company?  Feel free to use your CAS to do the computation here.
      </p>
      </statement>
      <answer>
      <p>
      <me>
      12\cdot \begin{bmatrix}
      14\\32\\21\end{bmatrix} + 9\cdot \begin{bmatrix}
      9\\7\\8\end{bmatrix} + 15\cdot \begin{bmatrix}
      34\\12\\5\end{bmatrix} + 7\cdot \begin{bmatrix}
      41\\52\\23\end{bmatrix}=
      \begin{bmatrix}
      1046\\991\\560
      \end{bmatrix}
      </me>
      This means we received $1046 from Company 1, $991 from Company 2, and $560 from Company 3.
      </p>
      </answer>
      </task>

      <task>
        <statement>
          <p>
            Since you allowed your CAS to do the computation for part (b), let's think about how it is 
            doing the arithmetic.  Using what we have defined for combining scalar multiplication and 
            vector addition in Equation 1.1.2, show the details of how the CAS was computing the resulting 
            vector that you obtained in part (b).
          </p>
        </statement>
        <answer>
          <p>
          <me>
          \begin{bmatrix}
          12\cdot14 \\12\cdot32 \\12\cdot21 \end{bmatrix} + \begin{bmatrix}
          9\cdot9 \\9\cdot7 \\9\cdot8 \end{bmatrix} + \begin{bmatrix}
          15\cdot34 \\15\cdot12 \\15\cdot5 \end{bmatrix} + \begin{bmatrix}
          7\cdot41 \\7\cdot52 \\7\cdot23 \end{bmatrix} = 
          </me>
          <p>
          <me>
          \begin{bmatrix}
          12\cdot14 + 9\cdot9 + 15\cdot34 + 7\cdot41 \\
          12\cdot32 + 9\cdot7 + 15\cdot12 + 7\cdot52 \\
          12\cdot21 + 9\cdot8 + 15\cdot5 + 7\cdot23
          \end{bmatrix} = 
          \begin{bmatrix}
          1046\\991\\560
          \end{bmatrix}
          </me> 
          </p>
          </p>
        </answer>
      </task>

      <task>
        <statement>
          <p>
          In general, we can think of the selling price for each of the four <term>Products</term> as scalars 
          <m> p_1, p_2, p_3, p_4 </m>.  Give a general expression in terms of <m> p_1, p_2, p_3, p_4 </m> 
          for the revenue generated by the purchases for the three companies expressing them as a 
          linear combination of three-entry revenue vectors (one entry for each company) resulting in the 
          revenue vector, <m>\begin{bmatrix} r_1\\r_2\\r_3\end{bmatrix}</m>.
          </p>
        </statement>
        <answer>
          <p>
            <me>
            p_1 \begin{bmatrix}
            14\\32\\21\end{bmatrix} + p_2 \begin{bmatrix}
            9\\7\\8\end{bmatrix} + p_3 \begin{bmatrix}
            34\\12\\5\end{bmatrix} + p_4 \begin{bmatrix}
            41\\52\\23\end{bmatrix} = \begin{bmatrix}
            r_1\\r_2\\r_3\end{bmatrix}
            </me>
          </p>
        </answer>
      </task>
    </activity>
  </p>
  
  <p>
Notice that where the product and sum are combined in part (c) we have the scalar values (or prices) of each 
<term>Product</term> ($12, $9, $15, and $7) being multipled by all entries in their respective vectors where the number 
of orders of each <term>Product</term> is placed in the vector in order by the company.  When these vectors are then added, 
we get the total revenue for each company organized as an ordered triple (since there are three companies).
  </p>
  
  <p>
   Here we are purposefully using an example where the number of entries in each set of values of interest 
   (prices and revenue) are different to highlight that although we can have the same number of entries in 
   each set be the same, it is not necessary.  Eventually we will express the prices as a vector consisting 
   of four entries and the revenue as a vector consisting of three entries where we can think of the process 
   of going from prices to revenue as a <em>transformation</em> between worlds so to speak.  In this case we 
   will have four entries in one set of vectors/world (prices of different Products) meaning that these vectors 
   exist in <m>\mathbb{R}^4</m> such as 
   <m>
   \begin{bmatrix}
   p_1\\p_2\\p_3\\p_4
   \end{bmatrix}
   </m> 
   and three entries in the other set of vectors/world (revenue from each of the three companies) existing in 
   <m>
   \mathbb{R}^3
   </m> 
   like 
   <m>\begin{bmatrix}
   r_1\\r_2\\r_3\end{bmatrix}
   </m>.
  </p>

  <p>
    In the previous activity, you may have noticed behaviors of the arithmetic when working with the vectors 
    and scalars that are familiar.  From your basic experiences in elementary school, you will recall some 
    properties for operating on numbers that seem to also be happening in your work with vectors.  Let's 
    explore these briefly by using the properties of vector addition and scalar multiplication we have 
    just defined.
  </p>
  
  <p>
  <activity>
      <title >Structure of Vectors</title >
      <introduction>
      <p>
        Consider the vectors 
        <m>\mathbf{u}=
            \begin{bmatrix}
            -1\\2\\5
            \end{bmatrix}</m>, 
        <m>\mathbf{v}=
            \begin{bmatrix}
            2\\3\\0
            \end{bmatrix}</m>, and
        <m>\mathbf{w}=
            \begin{bmatrix}
            -2\\-1\\4
            \end{bmatrix}</m>.
        Define each of these vectors in your computer algebra system (CAS).
      </p>
      </introduction>

      <task>
      <statement>
      <p>
        Based on what we know about how we have defined vector addition and the fact that all of these vectors 
        are in <m>\mathbb{R}^3</m>, when we add any two of them we will get another vector in <m>\mathbb{R}^3</m>.
        However, what other properties hold?  Using your CAS, compute <m>\mathbf{u}+\mathbf{v}</m> and then 
        compute <m>\mathbf{v}+\mathbf{u}</m>.  Describe what you notice?  Have you seen this behavior before 
        with real numbers?  What is this property called?
      </p>
      </statement>
      </task>

      <task>
      <statement>
      <p>
        Using your CAS, compute <m>\left(\mathbf{u}+\mathbf{v}\right)+\mathbf{w}</m>, first by computing 
        <m>\mathbf{u}+\mathbf{v}</m> and then adding <m>\mathbf{w}</m> to your result.  Now
        compute <m>\mathbf{u}+\left(\mathbf{v}+\mathbf{w}\right)</m>, first by computing 
        <m>\mathbf{v}+\mathbf{w}</m> and then adding your result to <m>\mathbf{u}</m>. Describe what you 
        notice?  Have you seen this behavior before with real numbers?  What is this property called?
      </p>
      </statement>
      </task>

      <task>
        <statement>
          <p>
            Using each of the vectors, <m>\mathbf{u}</m>, <m>\mathbf{v}</m>, and <m>\mathbf{w}</m>, add the 
            vector <m>\begin{bmatrix} 0\\0\\0\end{bmatrix}</m> to each.  Describe what you notice.  Have you 
            seen this behavior before with real numbers?  What is this property called?
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
          Using each of the vectors, <m>\mathbf{u}</m>, <m>\mathbf{v}</m>, and <m>\mathbf{w}</m>, negate 
          each entry of <m>\mathbf{u}</m> and add the resulting vector to <m>\mathbf{u}</m>.  Describe what 
          you notice.  Repeat this process with <m>\mathbf{v}</m> and <m>\mathbf{w}</m>.  Do you 
          get similar results?  Have you seen this behavior before with real numbers?  What is this property 
          called?
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
          Using your CAS, compute <m>2\cdot \left(\mathbf{u}+\mathbf{v}\right)</m>, first by computing 
          <m>\mathbf{u}+\mathbf{v}</m> and then multiplying 2 times your result.  Now compute 
          <m>2\cdot \mathbf{u}+2\cdot \mathbf{v}</m>, first by computing 2 times each vector and then 
          adding your results together. Describe what you notice?  Have you seen this behavior before with 
          real numbers?  What is this property called?
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
          Given that <m>2+3=5</m>, compute <m>5\cdot \left(\mathbf{u}+\mathbf{v}\right)</m> and 
          <m>2\cdot \mathbf{u} + 3\cdot \mathbf{v}</m>.  Describe what you notice?  Have you seen this 
          behavior before with real numbers?  What is this property called?
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
          Using your CAS, compute <m>2 \left(3\mathbf{u}\right)</m>, first by computing 
          <m>3\mathbf{u}</m> and then multiplying 2 times your result.  Now compute 
          <m>\left(2\cdot3\right) \mathbf{u}</m>, first by computing 2 times 3 and then 
          multiplying your result by <m>\mathbf{u}</m>. Describe what you notice?  Have you seen this 
          behavior before with real numbers?  What is this property called?
          </p>
        </statement>
      </task>
    </activity>
  </p>

  <p>
    Since we have seen these properties before from our work with real numbers, we can use them with 
    vectors and scalars so that we can manipulate these combinations of operations.  To this end, we can define 
    a "world" where objects like vectors and scalars behave in a way that we expect and can use.
  </p>
  <p>
    <definition xml:id="def-vector-space">
    <title>Vector Space</title>
      <statement>
        <p>
          A <term>vector space</term> is a nonempty set <m>V</m> of objects, called
          <em>vectors</em>, on which are defined two operations, called <em>addition</em> and 
          <em>scalar multiplication</em> (for real numbers), that satisfy the following axioms.  
          For any  <m>\mathbf{u}, \mathbf{v}, \mathbf{w} \in V</m> and <m>c, d \in \mathbb{R}</m>:
          <ol>
            <li>
              <p>
                <m>\mathbf{u}+\mathbf{v} \in V</m>
              </p>
            </li>
            <li>
              <p>
                <m>\mathbf{u}+\mathbf{v}=\mathbf{v}+\mathbf{u}</m>
              </p>
            </li>
            <li>
              <p>
                <m>\left(\mathbf{u}+\mathbf{v}\right)+\mathbf{w}=\mathbf{u}+\left(\mathbf{v}+\mathbf{w}\right)</m>
              </p>
            </li>
            <li>
              <p>
                There exists a <em>zero vector</em>, denoted <m>\mathbf{0} \in V</m>, such that 
                <m>\mathbf{u}+\mathbf{0}=\mathbf{u}, \forall \mathbf{u} \in V</m>.
              </p>
            </li>
            <li>
              <p>
                For each <m>\mathbf{u} \in V</m>, there exists a vector denoted <m>-\mathbf{u} \in V</m> 
                such that <m>\mathbf{u}+\left(-\mathbf{u}\right)=\mathbf{0}</m>.
              </p>
            </li>
            <li>
              <p>
                The scalar multiple of <m>\mathbf{u}</m> by <m>c</m>, denoted <m>c\mathbf{u} \in V</m>.
              </p>
            </li>
            <li>
              <p>
                <m>c\left(\mathbf{u}+\mathbf{v}\right)=c\mathbf{u}+c\mathbf{v}</m>
              </p>
            </li>
            <li>
              <p>
                <m>\left(c+d\right)\mathbf{u}=c\mathbf{u}+d\mathbf{u}</m>
              </p>
            </li>
            <li>
              <p>
                <m>c\left(d\mathbf{u}\right)=\left(cd\right)\mathbf{u}</m>
              </p>
            </li>
            <li>
              <p>
                <m>1\mathbf{u}=\mathbf{u}</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </definition>
  </p>
  </subsection>
<subsection xml:id="sec-Transform-Data-Matrix-Mult">
  <title>Transforming Data and Matrix Multiplication</title>
  <p>
    As we have seen, we can use vectors to represent any entity that might have multiple components.  This allows 
    us to manipulate values of common components by adding or multiplying them while keeping the 
    components separated in the process.  This use of linear combinations of vectors is useful, but the 
    real desire of the previous scenario is to examine how manipulating one set of values (say, prices of 
    products) affects another set of values (revenue from each company).  Just as we explored functional 
    relationships in algebra and calculus, we also might want to explore functional relationships with 
    objects that have not just one value as an input and one corresponding value as an output, but rather 
    inputs that have many component values and a corresponding output that also has many component values.
  </p>
  <p>
    Recall that one of our first experiences with functions dealt with simple linear relationships.  For 
    example, Hooke's Law states that there is a simple linear relationship between force on a stretched 
    or compressed spring and the distance of the associated stretch or compression, <m>F=kx</m>, where <m>k</m> 
    is a constant of proportionality.  If we use <em>function notation</em> to express that force, 
    <m>F</m>, is a function of stretch, <m>x</m>, we indicate the independent variable by placing it in 
    parentheses getting, <m>F\left(x\right)=kx</m>.
  </p>
  <p>
    In this situation, we obtain the force as an output by multiplying the stretch, <m>x</m>, by a numerical 
    value, <m>k</m>.  What if in our scenario for the relationship between pricing of products and the 
    revenue generated from each of our three companies, we could have a simple multiplication by something 
    that acted like <m>k</m> in our Hooke's Law relationship?  In the <m>F\left(x\right)=kx</m> case, there 
    is a single value, <m>k</m>, that affects the output, <m>F</m>, for a given input, <m>x</m>.  However, 
    in the situation with price vs revenue, there are many values impacting the output of revenue for an 
    input vector of prices (namely, all of the different order values provided by the companies placing 
    orders).  So, our <em>k</em>-equivalent must take into account all of the values of the orders placed 
    by the companies.  Here we can think of our single multiplier (like that of <m>k</m>) as being 
    comprised of an array of order values for the products like we had for the linear combination of the vectors 
     <me>
\left\{ \begin{bmatrix}
        14\\32\\21
        \end{bmatrix}
        ,\begin{bmatrix}
        9\\7\\8
        \end{bmatrix}
        ,\begin{bmatrix}
        34\\12\\5
        \end{bmatrix}
        ,\begin{bmatrix}
        41\\52\\23
        \end{bmatrix}
\right\}
    </me>
    except now we express this set of vectors as a single matrix where each column is a vector (called a 
    <em>column vector</em>).  This gives an entity (matrix) 
    <me>
       \begin{bmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{bmatrix}
    </me>
    that serves the role that <m>k</m> did in <m>F=kx</m>.

  </p>
  <p>
    What this does for us is it allows us to think of the scalars (prices) we used in the linear combination, 
    <me>
      p_1 \begin{bmatrix}
      14\\32\\21\end{bmatrix} + p_2 \begin{bmatrix}
      9\\7\\8\end{bmatrix} + p_3 \begin{bmatrix}
      34\\12\\5\end{bmatrix} + p_4 \begin{bmatrix}
      41\\52\\23\end{bmatrix} = \begin{bmatrix}
      r_1\\r_2\\r_3\end{bmatrix}
     </me>
     as an input vector, 
     <m>
   \begin{bmatrix}
   p_1\\p_2\\p_3\\p_4
   \end{bmatrix}
    </m>,
    so that we get a relationship that is structurally similar to <m>F=kx</m>:
    <me>\begin{bmatrix}
   r_1\\r_2\\r_3\end{bmatrix} =
    \begin{bmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{bmatrix}

\begin{bmatrix}
   p_1\\p_2\\p_3\\p_4
   \end{bmatrix}
   </me>
   where <m>\begin{bmatrix}
   r_1\\r_2\\r_3\end{bmatrix} </m> acts like <m>F</m>, <m>\begin{bmatrix}
   p_1\\p_2\\p_3\\p_4
   \end{bmatrix}</m> acts like <m>x</m>, and <m>\begin{bmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{bmatrix}</m> acts like <m>k</m>.
  </p>
  <p>
    The use of a matrix as a single entity that we can use to multiply by a vector brings an interesting 
    question.  What does it mean to multiply by a matrix?  If we look at what we want to do from our 
    functional perspective in the case above, we would like to have the outputs represent the revenue 
    in the way we ultimately added them up in the linear combination of the vectors with the prices 
    viewed as scalars for the column vectors in the matrix.  This means that we will need to define the 
    multiplication of a matrix and a vector in such a way that we get:
    <me>
    \begin{bmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{bmatrix}

\begin{bmatrix}
   p_1\\p_2\\p_3\\p_4
   \end{bmatrix} = 

   \begin{bmatrix}
      p_1\cdot14 + p_2\cdot9 + p_3\cdot34 + p_4\cdot41 \\
      p_1\cdot32 + p_2\cdot7 + p_3\cdot12 + p_4\cdot52 \\
      p_1\cdot21 + p_2\cdot8 + p_3\cdot5 + p_4\cdot23
      \end{bmatrix} =
    </me>
    <me>
      p_1 \begin{bmatrix}
      14\\32\\21\end{bmatrix} + p_2 \begin{bmatrix}
      9\\7\\8\end{bmatrix} + p_3 \begin{bmatrix}
      34\\12\\5\end{bmatrix} + p_4 \begin{bmatrix}
      41\\52\\23\end{bmatrix}
     </me>
    Now this may seem complicated, but one way to look at the process is that we proceed across a row in 
    the matrix while moving down the vector component by component adding the products of the row entries 
    of the matrix and the corresponding component entries of the vector.  For example, for the top entry 
    in the resulting revenue vector, we obtained it by moving across the first row with values 14, 9, 34, 
    and 41, while multiplying each by their respective position price value <m>p_1</m>, <m>p_2</m>, <m>p_3</m>, 
    and <m>p_4</m> and then adding these four products together.  This gives <m>
    p_1\cdot14 + p_2\cdot9 + p_3\cdot34 + p_4\cdot41</m>.  Now we proceed similarly for each row moving across 
    the row and down the vector creating product combinations and adding them together as we go.  The row 
    of the matrix we use for the computation becomes the row position in the resulting vector we are 
    creating (in this case, revenue).
    <me>
    \begin{bmatrix}
14\amp 9\amp 34\amp 41\\
32\amp 7\amp 12\amp 52\\
21\amp 8\amp 5\amp 23
\end{bmatrix}

\begin{bmatrix}
   p_1\\p_2\\p_3\\p_4
   \end{bmatrix} = 

   \begin{bmatrix}
      p_1\cdot14 + p_2\cdot9 + p_3\cdot34 + p_4\cdot41 \\
      p_1\cdot32 + p_2\cdot7 + p_3\cdot12 + p_4\cdot52 \\
      p_1\cdot21 + p_2\cdot8 + p_3\cdot5 + p_4\cdot23
      \end{bmatrix} = 
      \begin{bmatrix}
      r_1\\r_2\\r_3\end{bmatrix}
    </me>
    You will likely notice that the result of the way we have chosen to define the multiplication of a 
    matrix and a vector only makes sense if the number of columns of the matrix matches the number of 
    entries (rows of components) of the vector.
  </p>
</subsection>
<subsection xml:id="sec-Transformations-Vectors">
  <title>Transformations of Vectors</title>
  <p>
    Now that we have defined what it means to multiply a matrix and a vector, we can go back to the concept 
    that motivated it, namely, the desire to move between an input vector and an output vector.  In a way, 
    we are looking to <em>transform</em> one type of vector into another type of vector.  When we think of 
    our example of Hooke's Law as <em>transforming</em> stretch or compression into force, we note that this 
    happens in our daily lives and we are not often even aware it is there.
    </p>

    <p>
      Consider a trip to the grocery 
      store.  In the produce aisle, we take zucchini and place them on a scale.  In turn, the scale returns a 
      weight (force) in pounds (if you are in the USA) or mass in kilograms (practically anywhere else in the 
      world).  Inside the scale, there is a spring that is being compressed or stretched.  This value is then 
      <em>transformed</em> into a value of weight or mass using Hooke's Law.  In fact, it is more likely the 
      case that you are more familiar with a transformation in form of cost instead of weight or mass 
      as most digital scales today allow us to scan the scale's output barcode registering a cost in our 
      "shop and scan" app.  Below is a video illustrating this process.  
  </p>
  <p>
    <figure xml:id="linear-transformation-video">
      <video youtube="mzqYk0K7FMA"/>
      <caption>The Produce Aisle: Concept of Linear Transformation</caption>
    </figure>
  </p>
  <p>
    So what are the characteristics of this type of transformation?  Consider the case from the video where 
    we saw that the doubling the force (or mass) corresponded in the doubling of the stretch.  Similarly, 
    tripling the force would triple the stretch.  In general, this means that any multiple of stretch will 
    correspond to the same multiple of force (or mass or cost) depending on the output we desire for the 
    transformation.  We can see this from the basic algebra from Hooke's Law.
    <me>
      F\left(2x\right)=k\left(2x\right)=2\left(kx\right)=2F\left(x\right)
    </me>
    What this says is that <em>scalar multiplication is preserved</em>.
  </p>
  <p>
    Now this is all well and good if we are looking at replicating the same stretch multiple times (e.g. all of 
    our zucchini are the exact same weight), but what about the case where we have multiple numbers of 
    zucchini of varying weight (corresponding to varying stretches)?  We also want to have it be the case that 
    if we place two different "stretch" zucchinis on the scale that the resulting weight will simply be added 
    together as well so that their corresponding costs will also be added together (since we are paying based 
    on the cost/unit weight).  In this case, suppose we have two possibly different stretches <m>x</m>, and 
    <m>y</m>.  Here we get 
    <me>
      F\left(x+y\right)=k\left(x+y\right)=kx+ky=F\left(x\right)+F\left(y\right)
    </me>
    What this says is that <em>vector addition is preserved</em>.  In this case, we can think of the inputs, 
    <m>x</m> and <m>y</m>, as vectors with only one component.  In fact, if you have ever taken a physics class, 
    you will recall that both force and stretch in Hook'e Law were considered vectors since along a single 
    line we associate a positive and negative direction for these values to indicate direction of the force 
    or stretch.  We often represent this relationship as a vector relationship, 
    <m>\mathbf{F}=k\mathbf{x}</m> or <m>\overset{\rightharpoonup}{F}=k\overset{\rightharpoonup}{x}</m>.
  </p>
  <p>
    Recall from your Algebra 1 days, a function like <m>F=kx</m> is the most basic of linear functions.  
    Therefore, it should come as no surprise that these two aspects of behavior (preservation of scalar 
    multiplication and vector addition) by this type of function are the defining properties of what we call 
    <em>linear transformations</em>.
  </p>
  <p>
    <activity>
      <introduction>
      <p>
        In the case of the force and spring stretch, we had a spring constant, <m>k</m>, as our <em>constant of 
        proportionality</em> where it was a single value that worked for a specific spring.  As we have seen, 
        we may have relationships where this "constant" is actually dependent on many different values instead 
        of a single one (i.e. a matrix of values).  Can we still have these two operations (scalar 
        multiplication and vector addition) work when the thing we are multiplying the vectors by is a matrix?  
        Suppose we have a matrix transformation given by <m>T\left(\mathbf{x}\right)=
        \begin{bmatrix}
        -1 \amp 3 \amp 1\\
        2 \amp 5 \amp 2\\
        1 \amp 0 \amp -1
        \end{bmatrix}\mathbf{x}</m>.  
        Define this transformation in your CAS and then define 
        <m>\mathbf{v}=\begin{bmatrix} -2\\1\\0\end{bmatrix}</m> and 
        <m>\mathbf{w}=\begin{bmatrix} 3\\2\\-2\end{bmatrix}</m>.
      </p>
      <p>
        <figure xml:id="">
          <caption>Defining Transformation on TI-Nspire CX II CAS</caption>
          <image source="images/lineartransformation-act-1-1-3.png" width="60%">
          <shortdescription>Defining on TI-Nspire CX II CAS</shortdescription>
        </image>
        </figure>
      </p>
      </introduction>

      <task>
      <statement>
      <p>
        Compute <m>T\left(\mathbf{v}\right)</m> and <m>T\left(\mathbf{w}\right)</m> and add them.
      </p>
      </statement>
      </task>

      <task>
      <statement>
      <p>
        Compute <m>\mathbf{v}+\mathbf{w}</m> and <m>T\left(\mathbf{v}+\mathbf{w}\right)</m>.  Describe 
        your observations relative to your responses from part(a).
      </p>
      </statement>
      </task>

      <task>
        <statement>
          <p>
            Compute <m>T\left(4\mathbf{v}\right)</m> and <m>4T\left(\mathbf{v}\right)</m>.  Describe your 
            observations.
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
          To see if your observations will hold in general for this particular matrix, create two vectors 
          on your CAS , <m>\mathbf{x}=\begin{bmatrix} x_1\\x_2\\x_3\end{bmatrix}</m> and 
          <m>\mathbf{y}=\begin{bmatrix} y_1\\y_2\\y_3\end{bmatrix}</m>.  Using your CAS, find expressions 
          for <m>T\left(\mathbf{x}+\mathbf{y}\right)</m> and 
          <m>T\left(\mathbf{x}\right)+T\left(\mathbf{y}\right)</m>.  Does your earlier observation hold for any 
          two vectors in <m>\mathbb{R}^3</m>?  Explain.
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
          Using, <m>c</m>, to represent any real number, find expressions for 
          <m>T\left(c\cdot \mathbf{x}\right)</m> and <m>c\cdot T\left(\mathbf{x}\right)</m>.  Does your 
          observation from part (c) hold for all vectors in <m>\mathbb{R}^3</m>?  Explain.
          </p>
        </statement>
      </task>

      <task>
        <statement>
          <p>
            Given how we defined matrix-vector multiplication out of linear combiinations, come up with an 
            argument for why all such matrix transformations <em>must</em> be 
            <m>\mathbf{linear}</m> <m>\mathbf{transformations}</m> preserving both scalar multiplication and vector addition.
          </p>
        </statement>
      </task>
    </activity>
  </p>
  <p>
  <definition xml:id="def-linear-mapping">
    <title>Linear Transformation</title>
    
    <statement>
      <p>
        Suppose <m>T</m> is a mapping between <m>\mathbb{R}^n</m> and <m>\mathbb{R}^m</m>, 
        <m>T: \mathbb{R}^n\rightarrow \mathbb{R}^m</m> (<m>n</m> and <m>m</m> need not be distinct) 
        such that both scalar multiplication and vector addition are preserved.
        <me>
          T\left(\alpha \mathbf{v}\right)=\alpha T\left(\mathbf{v}\right)
        </me>
        
        <me>
          T\left(\mathbf{v}+\mathbf{w}\right)=T\left(\mathbf{v}\right)+T\left(\mathbf{w}\right)
        </me>
        where <m>\mathbf{v}, \mathbf{w} \in \mathbb{R}^n</m>, and <m>\alpha</m> is a scalar.  
        Then the mapping <m>T</m> is called <term>linear</term> or a <term>linear transformation</term>.
      </p>
    </statement>
  </definition>
  </p>
    <p>
    Just as the relationship of Hooke's Law can be thought of as transforming <em>stretch</em> into <em>force</em>, 
    in our scenario between pricing structures and the revenue generated, we are similarly looking to transform a 
    pricing scheme into the resulting revenue for our three companies.  We can even use function notation to 
    represent this relationship.  If we let the vector <m>\mathbf{p}=\begin{bmatrix}
   p_1\\p_2\\p_3\\p_4 \end{bmatrix}</m>, we can think of the product of the matrix of orders by the companies 
   and the vector <m>\mathbf{p}</m> as a revenue transformation (or function), <m>R</m>, given by  
   <me>
    R\left(\mathbf{p}\right)=
    \begin{bmatrix}
    14\amp 9\amp 34\amp 41\\
    32\amp 7\amp 12\amp 52\\
    21\amp 8\amp 5\amp 23
    \end{bmatrix}
    \mathbf{p} = 
    \begin{bmatrix}
    14\amp 9\amp 34\amp 41\\
    32\amp 7\amp 12\amp 52\\
    21\amp 8\amp 5\amp 23
    \end{bmatrix}
    \begin{bmatrix}
    p_1\\p_2\\p_3\\p_4
    \end{bmatrix}
   </me>
   This is effectively a mapping between vectors in <m>\mathbb{R}^4</m> and vectors in <m>\mathbb{R}^3</m>.  
   We can represent this mapping as <m>R:\mathbb{R}^4 \rightarrow \mathbb{R}^3</m>.

  </p>
  <p>
  <activity>
    <title>Price to Revenue: Linear Transformation?</title>
    <introduction>
      <p>
        In the previous activity, we illustrated how we can show that a matrix transformation between 
        the same spaces (<m>\mathbb{R}^3</m> to <m>\mathbb{R}^3</m>) is, in fact, a linear transformation.  
        In this activity, let's take a similar approach to show we can also make the same claim for mappings 
        between different spaces (<m>\mathbb{R}^4</m> to <m>\mathbb{R}^3</m>).  Here we will use our earlier 
        example of transforming price scenarios into revenues for our three companies.
      </p>
    </introduction>
    
    <task>
      <statement>
        <p>
          Consider the transformation 
          <m>R=T\left(\mathbf{p}\right)=
              \begin{bmatrix}
              14\amp 9\amp 34\amp 41\\
              32\amp 7\amp 12\amp 52\\
              21\amp 8\amp 5\amp 23
              \end{bmatrix}
              \mathbf{p}</m>, 
            where <m>\mathbf{p}=\begin{bmatrix} p_1\\p_2\\p_3\\p_4\end{bmatrix}</m>.  Find expressions for 
            <m>T\left(c\cdot \mathbf{p}\right)</m> and <m>c\cdot T\left(\mathbf{p}\right)</m>.  
            Is scalar multiplication preserved for all vectors in <m>\mathbb{R}^4</m>?  Explain.
        </p>
      </statement>
    </task>

    <task>
      <statement>
        <p>
          To see if preservation of vector addition holds in general for this particular matrix, create 
          two vectors on your CAS , <m>\mathbf{p}=\begin{bmatrix} p_1\\p_2\\p_3\\p_4\end{bmatrix}</m> and 
          <m>\mathbf{q}=\begin{bmatrix} q_1\\q_2\\q_3\\q_4\end{bmatrix}</m>.  Using your CAS, 
          find expressions for <m>T\left(\mathbf{p}+\mathbf{q}\right)</m> and 
          <m>T\left(\mathbf{p}\right)+T\left(\mathbf{q}\right)</m>.  Is vector addition preserved for any  
          two vectors in <m>\mathbb{R}^4</m>?  Explain.
          </p>
      </statement>
    </task>
  </activity>
  </p>
  <p>
    <lemma xml:id="lem-">
      <statement>
        <p>
          If <m>T</m> is a linear transformation, then it must map the zero vector from the domain to the 
          zero vector in the range.  In other words, <m>T\left(\mathbf{0}_D\right)=\mathbf{0}_R</m>.
        </p>
      </statement>
      <proof>
        <p>
          Suppose <m>T:\mathbb{R}^n \rightarrow \mathbb{R}^m</m> is a linear transformation and 
          <m>\mathbf{v} \in \mathbb{R}^n</m>.  Well since <m>-\mathbf{v} \in \mathbb{R}^n</m>, we know that 
          <m>T\left(\mathbf{0}\right)=T\left(\mathbf{v}+\mathbf{-v}\right)</m>.  Since vector addition is 
          preserved, we get that this is equal to <m>T\left(\mathbf{v}\right)+T\left(\mathbf{-v}\right)</m>.  
          Again, as a linear transformation, we know that scalar multiplication is also preserved and so 
          <m>T\left(\mathbf{-v}\right)=-T\left(\mathbf{v}\right)</m> and thus 
          <m>T\left(\mathbf{v}\right)+T\left(\mathbf{-v}\right)=T\left(\mathbf{v}\right)+ 
          -T\left(\mathbf{v}\right)=\mathbf{0}</m> where <m>\mathbf{0}</m> here is in <m>\mathbb{R}^m</m>.
        </p>
      </proof>
    </lemma>
  </p>
  <p>
    We began this section looking at how we can represent practical data and relationships using matrices 
    and vectors along with operations allowing us to transform one type of vector into another.  In the next few 
    sections, we will extend this view to consider geometric representations that have far reaching 
    applications into areas such as digital file compression and image detection.  Eveytime you access your 
    phone using facial recognition, you are using linear algebra.  Vectors and matrices play a key role 
    in your everyday life and you may not even be aware of it!
  </p>
</subsection>
</section>
